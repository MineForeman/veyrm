# Simplified GitLab CI configuration
# This version focuses on what actually works with your runners

stages:
  - build
  - test

# Default image for jobs that don't specify one
default:
  image: ubuntu:24.04

# Variables available to all jobs
variables:
  DEBIAN_FRONTEND: noninteractive
  CMAKE_BUILD_TYPE: Release

# Linux build using Docker executor
build:linux:
  stage: build
  tags:
    - linux
  before_script:
    - apt-get update -qq
    - apt-get install -y cmake build-essential git
  script:
    - cmake --version
    - mkdir -p build
    - cd build
    - cmake -DCMAKE_BUILD_TYPE=${CMAKE_BUILD_TYPE} ..
    - cmake --build . -j
    - ls -la bin/
  artifacts:
    paths:
      - build/bin/
      - data/
    expire_in: 1 week

# Test the Linux build
test:linux:
  stage: test
  tags:
    - linux
  needs: ["build:linux"]
  script:
    - ./build/bin/veyrm_tests
    - ./build/bin/veyrm --help

# Windows build - Try without specifying image to avoid volume mount issues
build:windows:
  stage: build
  tags:
    - windows
  variables:
    # Environment variables to help with Windows Docker issues
    COMPOSE_CONVERT_WINDOWS_PATHS: "1"
    FF_NETWORK_PER_BUILD: "true"  # Use a new network for each build
    DOCKER_HOST: "npipe:////./pipe/docker_engine"  # Windows named pipe
  script:
    # Simple test to see if the runner works without volume mounts
    - echo "Testing Windows runner"
    - echo "Current directory:"
    - cd
    - echo "PowerShell test:"
    - powershell -Command "Write-Host 'PowerShell is working'"
    - powershell -Command "[System.Environment]::OSVersion"
  allow_failure: true